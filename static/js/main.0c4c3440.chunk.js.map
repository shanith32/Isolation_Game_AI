{"version":3,"sources":["AiAgent.js","Square.js","Board.js","PlayerSelector.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["AiAgent","Object","C_Users_Nadika_Documents_GitHub_Isolation_Game_AI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","levelOneNodes","initialDepth","state","playerLocation","p1Location","isAvailable","j","moves","row","col","i","length","_moves$i","C_Users_Nadika_Documents_GitHub_Isolation_Game_AI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","a","b","squares","p2Location","availableMoves","countLegalMoves","result","isPlayer1","children","_moves$i2","newState","map","array","slice","push","currentState","depth","maximizingPlayer","_this","checkGameOver","SEF","getChildren","maxEvaluation","Infinity","forEach","child","evaluation","minimax","Math","max","eval","minEvaluation","min","find","node","Square","props","react_default","createElement","Button","className","squareColor","onClick","value","Board","squareCssType","squareValue","src_Square","key","random","board","renderSquare","createBoard","Component","PlayerSelector","Modal","centered","size","show","Body","id","Container","Row","Col","style","display","justifyContent","require","default","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Array","fill","p1IsNext","isNull","slicedToArray","calculateWinner","checkIfMoveLegal","setState","_this$state","newAI","move","getMove","console","log","floor","status","_this2","winner","moveAi","concat","src_PlayerSelector_0","handleShow","src_Board_0","handleClick","App","src_Game_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c4c3440.chunk.js","sourcesContent":["class AiAgent {\r\n  constructor() {\r\n    this.levelOneNodes = [];\r\n    this.initialDepth = null;\r\n  }\r\n\r\n  // Count legal moves\r\n  countLegalMoves(state) {\r\n    let playerLocation = state.p1Location;\r\n    let isAvailable = [0, 0];\r\n\r\n    for (let j = 0; j < 2; j++) {\r\n      const moves = [\r\n        [playerLocation.row + 2, playerLocation.col + 1],\r\n        [playerLocation.row + 2, playerLocation.col - 1],\r\n        [playerLocation.row - 2, playerLocation.col + 1],\r\n        [playerLocation.row - 2, playerLocation.col - 1],\r\n        [playerLocation.row + 1, playerLocation.col - 2],\r\n        [playerLocation.row - 1, playerLocation.col - 2],\r\n        [playerLocation.row + 1, playerLocation.col + 2],\r\n        [playerLocation.row - 1, playerLocation.col + 2]\r\n      ];\r\n\r\n      for (let i = 0; i < moves.length; i++) {\r\n        const [a, b] = moves[i];\r\n        if (a >= 0 && a < 7 && b >= 0 && b < 7) {\r\n          if (state.squares[a][b] === null) isAvailable[j]++;\r\n        }\r\n      }\r\n\r\n      playerLocation = state.p2Location;\r\n    }\r\n\r\n    return isAvailable;\r\n  }\r\n\r\n  // Check if game over\r\n  checkGameOver(state) {\r\n    const availableMoves = this.countLegalMoves(state);\r\n    let result = false;\r\n\r\n    if (!availableMoves[0]) result = \"🧑\";\r\n    else if (!availableMoves[1]) result = \"🤖\";\r\n\r\n    return result;\r\n  }\r\n\r\n  // Static Evaluation Function\r\n  SEF(state) {\r\n    const availableMoves = this.countLegalMoves(state);\r\n    const result = availableMoves[0] - availableMoves[1];\r\n    return result;\r\n  }\r\n\r\n  // Get the children of a state\r\n  getChildren(state, isPlayer1) {\r\n    let playerLocation;\r\n    if (isPlayer1) playerLocation = state.p1Location;\r\n    else playerLocation = state.p2Location;\r\n    let children = [];\r\n\r\n    const moves = [\r\n      [playerLocation.row + 2, playerLocation.col + 1],\r\n      [playerLocation.row + 2, playerLocation.col - 1],\r\n      [playerLocation.row - 2, playerLocation.col + 1],\r\n      [playerLocation.row - 2, playerLocation.col - 1],\r\n      [playerLocation.row + 1, playerLocation.col - 2],\r\n      [playerLocation.row - 1, playerLocation.col - 2],\r\n      [playerLocation.row + 1, playerLocation.col + 2],\r\n      [playerLocation.row - 1, playerLocation.col + 2]\r\n    ];\r\n\r\n    for (let i = 0; i < moves.length; i++) {\r\n      const [a, b] = moves[i];\r\n      if (a >= 0 && a < 7 && b >= 0 && b < 7) {\r\n        if (state.squares[a][b] === null) {\r\n          if (isPlayer1) {\r\n            let newState = {\r\n              squares: state.squares.map(array => array.slice()),\r\n              p1Location: { row: a, col: b },\r\n              p2Location: {\r\n                row: state.p2Location.row,\r\n                col: state.p2Location.col\r\n              }\r\n            };\r\n\r\n            newState.squares[playerLocation.row][playerLocation.col] = \"@\";\r\n            newState.squares[a][b] = \"🤖\";\r\n            children.push(newState);\r\n          } else {\r\n            let newState = {\r\n              squares: state.squares.map(array => array.slice()),\r\n              p1Location: {\r\n                row: state.p1Location.row,\r\n                col: state.p1Location.col\r\n              },\r\n              p2Location: { row: a, col: b }\r\n            };\r\n\r\n            newState.squares[playerLocation.row][playerLocation.col] = \"@\";\r\n            newState.squares[a][b] = \"🧑\";\r\n            children.push(newState);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return children;\r\n  }\r\n\r\n  // Minimax search algorithm\r\n  minimax(currentState, depth, maximizingPlayer) {\r\n    // Set the initialDepth\r\n    if (this.initialDepth === null) this.initialDepth = depth;\r\n\r\n    if (depth === 0 || this.checkGameOver(currentState)) {\r\n      return this.SEF(currentState);\r\n    }\r\n\r\n    // Get all the children states for the currentState\r\n    const children = this.getChildren(currentState, maximizingPlayer);\r\n\r\n    if (maximizingPlayer) {\r\n      let maxEvaluation = -Infinity;\r\n\r\n      children.forEach(child => {\r\n        const evaluation = this.minimax(child, depth - 1, false);\r\n        maxEvaluation = Math.max(maxEvaluation, evaluation);\r\n        if (depth === this.initialDepth)\r\n          this.levelOneNodes.push({ state: child, eval: evaluation });\r\n      });\r\n      return maxEvaluation;\r\n    } else {\r\n      let minEvaluation = Infinity;\r\n\r\n      children.forEach(child => {\r\n        const evaluation = this.minimax(child, depth - 1, true);\r\n        minEvaluation = Math.min(minEvaluation, evaluation);\r\n        if (depth === this.initialDepth)\r\n          this.levelOneNodes.push({ state: child, eval: evaluation });\r\n      });\r\n      return minEvaluation;\r\n    }\r\n  }\r\n\r\n  getMove(evaluation) {\r\n    const result =\r\n      this.levelOneNodes.length !== 0\r\n        ? this.levelOneNodes.find(node => node.eval === evaluation)\r\n        : false;\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default AiAgent;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./Square.css\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <Button className={props.squareColor} onClick={props.onClick}>\r\n      {props.value}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"./Board.css\";\r\n\r\nclass Board extends Component {\r\n  renderSquare(row, col) {\r\n    let squareCssType = \"oddSquare\";\r\n    let squareValue = this.props.squares[row][col];\r\n\r\n    if (squareValue === \"@\") {\r\n      squareCssType = \"usedSquare\";\r\n      squareValue = null;\r\n    } else if (row % 2 === 0) {\r\n      if (col % 2 === 0) squareCssType = \"evenSquare\";\r\n    } else {\r\n      if (col % 2 !== 0) squareCssType = \"evenSquare\";\r\n    }\r\n\r\n    return (\r\n      <Square\r\n        key={Math.random()}\r\n        value={squareValue}\r\n        onClick={() => this.props.onClick(row, col)}\r\n        squareColor={squareCssType}\r\n      />\r\n    );\r\n  }\r\n\r\n  createBoard() {\r\n    let board = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let squares = [];\r\n      for (let j = 0; j < 7; j++) squares.push(this.renderSquare(i, j));\r\n\r\n      board.push(\r\n        <div key={i} className=\"board-row\">\r\n          {squares}\r\n        </div>\r\n      );\r\n    }\r\n    return board;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.createBoard()}</div>;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./PlayerSelector.css\";\r\n\r\nclass PlayerSelector extends Component {\r\n  render() {\r\n    return (\r\n      <Modal centered size=\"lg\" show={this.props.show}>\r\n        <Modal.Body id=\"modal\">\r\n          <Container>\r\n            <Row>\r\n              <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button\r\n                  className=\"boxes\"\r\n                  onClick={() => this.props.onClick(true)}\r\n                >\r\n                  🤖 <br />\r\n                  AI\r\n                </Button>\r\n              </Col>\r\n              <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button\r\n                  className=\"boxes\"\r\n                  onClick={() => this.props.onClick(false)}\r\n                >\r\n                  🧑 <br />\r\n                  You\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerSelector;\r\n","import React, { Component } from \"react\";\r\nimport Board from \"./Board\";\r\nimport PlayerSelector from \"./PlayerSelector\";\r\nimport \"./Game.css\";\r\nimport { isNull } from \"util\";\r\nconst AiAgent = require(\"./AiAgent\").default;\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(7)\r\n        .fill(null)\r\n        .map(() => Array(7).fill(null)),\r\n      p1IsNext: false,\r\n      p1Location: { row: null, col: null },\r\n      p2Location: { row: null, col: null },\r\n      show: true\r\n    };\r\n  }\r\n\r\n  // Calculate the winner\r\n  calculateWinner() {\r\n    let playerLocation = this.state.p1Location;\r\n    let isAvailable = [0, 0];\r\n\r\n    if (\r\n      (isNull(this.state.p1Location.row) &&\r\n        isNull(this.state.p1Location.col)) ||\r\n      (isNull(this.state.p2Location.row) && isNull(this.state.p2Location.col))\r\n    )\r\n      return false;\r\n\r\n    for (let j = 0; j < 2; j++) {\r\n      const moves = [\r\n        [playerLocation.row + 2, playerLocation.col + 1],\r\n        [playerLocation.row + 2, playerLocation.col - 1],\r\n        [playerLocation.row - 2, playerLocation.col + 1],\r\n        [playerLocation.row - 2, playerLocation.col - 1],\r\n        [playerLocation.row + 1, playerLocation.col - 2],\r\n        [playerLocation.row - 1, playerLocation.col - 2],\r\n        [playerLocation.row + 1, playerLocation.col + 2],\r\n        [playerLocation.row - 1, playerLocation.col + 2]\r\n      ];\r\n\r\n      for (let i = 0; i < moves.length; i++) {\r\n        const [a, b] = moves[i];\r\n        if (a >= 0 && a < 7 && b >= 0 && b < 7) {\r\n          if (isNull(this.state.squares[a][b])) isAvailable[j]++;\r\n        }\r\n      }\r\n\r\n      playerLocation = this.state.p2Location;\r\n    }\r\n\r\n    let result = false;\r\n\r\n    if (!isAvailable[0]) result = \"🧑\";\r\n    else if (!isAvailable[1]) result = \"🤖\";\r\n\r\n    return result;\r\n  }\r\n\r\n  // Function to check if the move is a legal move\r\n  checkIfMoveLegal(row, col) {\r\n    const playerLocation = this.state.p1IsNext\r\n      ? this.state.p1Location\r\n      : this.state.p2Location;\r\n\r\n    if (isNull(playerLocation.row) && isNull(playerLocation.col)) return false;\r\n\r\n    const moves = [\r\n      [playerLocation.row + 2, playerLocation.col + 1],\r\n      [playerLocation.row + 2, playerLocation.col - 1],\r\n      [playerLocation.row - 2, playerLocation.col + 1],\r\n      [playerLocation.row - 2, playerLocation.col - 1],\r\n      [playerLocation.row + 1, playerLocation.col - 2],\r\n      [playerLocation.row - 1, playerLocation.col - 2],\r\n      [playerLocation.row + 1, playerLocation.col + 2],\r\n      [playerLocation.row - 1, playerLocation.col + 2]\r\n    ];\r\n\r\n    for (let i = 0; i < moves.length; i++) {\r\n      const [a, b] = moves[i];\r\n      if (row === a && col === b) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Function to handle the click on a square\r\n  handleClick(row, col) {\r\n    const { squares } = this.state;\r\n    const { p2Location } = this.state;\r\n\r\n    if (\r\n      this.calculateWinner() ||\r\n      squares[row][col] ||\r\n      this.checkIfMoveLegal(row, col)\r\n    )\r\n      return;\r\n    if (!this.state.p1IsNext) {\r\n      squares[row][col] = \"🧑\";\r\n      if (p2Location.row !== null && p2Location.col !== null)\r\n        squares[p2Location.row][p2Location.col] = \"@\";\r\n\r\n      this.setState({\r\n        squares: squares,\r\n        p1IsNext: !this.state.p1IsNext,\r\n        p2Location: { row: row, col: col }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Function to handle the popup\r\n  handleShow(p1IsNext) {\r\n    this.setState({\r\n      p1IsNext,\r\n      show: false\r\n    });\r\n  }\r\n\r\n  // Function to move the AI\r\n  moveAi() {\r\n    const { squares, p1Location, p2Location, p1IsNext } = this.state;\r\n\r\n    if (\r\n      p1Location.row !== null &&\r\n      p1Location.col !== null &&\r\n      p2Location.row !== null &&\r\n      p2Location.col !== null\r\n    ) {\r\n      const newAI = new AiAgent();\r\n      const move = newAI.getMove(newAI.minimax(this.state, 8, true));\r\n      console.log(\"Move: \", move);\r\n      if (move) {\r\n        this.setState({\r\n          squares: move.state.squares,\r\n          p1IsNext: !p1IsNext,\r\n          p1Location: {\r\n            row: move.state.p1Location.row,\r\n            col: move.state.p1Location.col\r\n          }\r\n        });\r\n      } else return;\r\n    } else {\r\n      let row = Math.floor(Math.random() * 7);\r\n      let col = Math.floor(Math.random() * 7);\r\n\r\n      if (p2Location.row !== null && p2Location.col !== null) {\r\n        row = p2Location.row;\r\n        col = p2Location.col;\r\n\r\n        while (squares[row][col] === \"🧑\") {\r\n          row = Math.floor(Math.random() * 7);\r\n          col = Math.floor(Math.random() * 7);\r\n        }\r\n      }\r\n\r\n      squares[row][col] = \"🤖\";\r\n      if (p1Location.row !== null && p1Location.col !== null)\r\n        squares[p1Location.row][p1Location.col] = \"@\";\r\n\r\n      this.setState({\r\n        squares: squares,\r\n        p1IsNext: !p1IsNext,\r\n        p1Location: {\r\n          row: row,\r\n          col: col\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const winner = this.calculateWinner();\r\n\r\n    if (this.state.p1IsNext && !winner) this.moveAi();\r\n\r\n    let status;\r\n    if (winner) status = `${winner} WON! 🎉`;\r\n    else status = \"🤖💤\";\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <PlayerSelector\r\n          show={this.state.show}\r\n          onClick={p1IsNext => this.handleShow(p1IsNext)}\r\n        />\r\n        <div className=\"game-info\">\r\n          <div className=\"game-name\">The Isolation Game</div>\r\n          <span>{status}</span>\r\n        </div>\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={this.state.squares}\r\n            onClick={(row, col) => this.handleClick(row, col)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport Game from \"./Game\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Game />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}